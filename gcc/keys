-c: Компилирует исходный код, но не линковки. Создает объектный файл (.o).
-o <имя_файла>: Указывает имя выходного файла. Без этого ключа, выходной файл обычно называется a.out.
-S: Генерирует ассемблерный код (.s).
-E: Предварительная обработка исходного кода (препроцессинг). Выводит результат препроцессора на стандартный вывод.
-v: Подробный вывод о процессе компиляции (verbose).
-Wall: Включает все предупреждения компилятора (warnings). Очень рекомендуется использовать этот ключ для поиска потенциальных ошибок.
-Wextra: Включает дополнительные предупреждения.
-pedantic: Строгое следование стандарту языка C.
-g: Включает информацию для отладки (debugging information). Необходимо для использования отладчика (gdb).
-O<level>: Оптимизация кода. -O0 (отключение оптимизации), -O1 (базовая оптимизация), -O2 (более агрессивная оптимизация), -O3 (максимальная оптимизация), -Os (оптимизация для размера).
-I <директория>: Добавляет директорию в список директорий поиска заголовочных файлов (#include).
-L <директория>: Добавляет директорию в список директорий поиска библиотек при линковке.
-l<библиотека>: Линкует указанную библиотеку (например, -lm для математической библиотеки).
-static: Создает статически связанный исполняемый файл (все библиотеки включены в исполняемый файл).
-shared: Создает динамически связанный исполняемый файл (библиотеки загружаются во время выполнения).
-D<макрос>: Определяет макрос препроцессора.
-U<макрос>: Отменяет определение макроса препроцессора.
-std=<стандарт>: Указывает стандарт языка C (например, -std=c99, -std=c11, -std=gnu99, -std=gnu11). Очень важно для обеспечения переносимости кода.
